console.log("connect");

/*
------------------------------------------------------------------------------------------
대입연산자 (=)
------------------------------------------------------------------------------------------
변수에 값을 할당할 때 사용
------------------------------------------------------------------------------------------
*/
let a = 1;
const b = "1";
console.log(a);
console.log(b); 



console.log("---------------------------------");

/*
------------------------------------------------------------------------------------------
비교 연산자 (==, !=)
------------------------------------------------------------------------------------------
피연산자의 값이 같은지 비교
타입이 달라도 괜찮음 -> 값만 비교하기 때문
------------------------------------------------------------------------------------------
동등 연산자 (=== , !==)
------------------------------------------------------------------------------------------
피연산자의 값과 타입을 모두 비교
엄격한 동등 연산자
------------------------------------------------------------------------------------------
*/
console.log(1 == 1); //참 (1), True
console.log(1 == 2); //거짓 (0), False
console.log(1 == "1"); // 참(1), True -> 타입비교 x
console.log(1 != 1); //거짓 (0), False -> 숫자1과 숫자1은 같기 때문
console.log(1 != 2); //참 (1), True
console.log(1 != "1"); //거짓 (0), False

console.log("---------------------------------");

console.log(1 === 1); //참 (1), True
console.log(1 === 2); //거짓 (0), False
console.log(1 === "1"); //거짓 (0), False -> 타입까지비교
console.log(1 !== 1); //거짓 (0),False -> 숫자1과 숫자1은 같기 때문
console.log(1 !== 2); //참 (1), True
console.log(1 !== "1"); //참 (1), True -> 타입까지비교

console.log("---------------------------------");
/*
------------------------------------------------------------------------------------------
비교연산자
------------------------------------------------------------------------------------------
> , >=, <, <=
------------------------------------------------------------------------------------------
*/
console.log(2 > 1); //참 (1), True
console.log(1 >= 1); //참 (1), True
console.log(2 < 1); //거짓 (0), False
console.log(1 <= 1); //참 (1), True

console.log("---------------------------------");

/*
------------------------------------------------------------------------------------------
산술연산자
------------------------------------------------------------------------------------------
+, -, *, /, %(나머지), **(거듭제곱)
------------------------------------------------------------------------------------------
*/
console.log(1 + 2); //3
console.log(1 - 2); //-1
console.log(1 * 2); //2
console.log(1 / 2); //0.5
console.log(1 % 2); //1
console.log(1 ** 2); //1

console.log("————————————————");

// 논리 연산자
// !, &&, ||
console.log(!true); // false
console.log(!false); // true
console.log(!!true); // -> true -> !때문에 false -> !때문에 true -> true
console.log(!!false); // false
console.log(true && true); // true
console.log(1 < 2 && 1 < 5); // true (모든 값이 true)
console.log(1 > 2 && 1 < 5); // false (하나가 false라서)
console.log(true || true); // true
console.log(true || false); // true (true가 하나라도 있으면 true)
console.log(1 > 2 || 1 < 5); // true
console.log(1 > 2 || 1 > 5); // false (둘 다 false여야 false)
console.log(1 > 2 || 1 > 5 || true || false); // 이렇게 여러개를 쓰는 것도 가능하다.

// 연산자 응용
console.log(!(2 > 1)); // false
console.log(2 > 1 && -2 < 1); // true
console.log((2 > 1 && -2 < 1) || 5 > 3); // true

// quiz
// 코드 결과 작성
console.log(3 <= 1); // false
console.log(7 == '7'); // true
console.log(-10 >= -11); // true

const aa = 'a';
console.log(aa);
console.log('원하는 텍스트 콘솔창에 출력');

console.log(aa, '쉼표'); // 자동으로 띄어쓰기 됨
console.log(aa + '+ 연산자'); // 전부 연결해서 출력됨

// "안녕 나는 레일라야"
const name = '레일라';
console.log('안녕 나는', name, '야');
console.log('안녕 나는' + name + '야');
console.log(`안녕 나는 ${name}야`);

console.log('name: ', name);


